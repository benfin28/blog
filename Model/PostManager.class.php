<?php
/**
 * 
 * Code skeleton generated by dia-uml2php5 plugin
 * written by KDO kdo@zpmag.com
 * @see        Manager
 */
require_once('Manager.class.php');

class PostManager extends Manager 

{
	

	/**
	 * @access public
	 */

	public function getListPosts($state = NULL) 

	{

		$listPosts = [];

			if ($state === NULL)

			{
				$q = $this->db->prepare('SELECT id, title, content, DATE_FORMAT(creation_date, \'%d/%m/%Y à %Hh%imin%ss\') AS creationDate, state FROM posts ORDER BY creation_date DESC');
			}

			else

			{
				$q = $this->db->prepare('SELECT id, title, content, DATE_FORMAT(creation_date, \'%d/%m/%Y à %Hh%imin%ss\') AS creationDate, state FROM posts WHERE state = :state ORDER BY creation_date DESC');
				$q->bindValue(':state', $state);
			}

		/*$q = $this->db->prepare('SELECT id, title, content, DATE_FORMAT(creation_date, \'%d/%m/%Y à %Hh%imin%ss\') AS creationDate, state, teaser FROM posts WHERE state = :state ORDER BY creation_date DESC');
		$q->bindValue(':state', $state);*/

		

		$q->execute();


        while ($donnees = $q->fetch(PDO::FETCH_ASSOC))

    	{

      		$listPosts[] = new Post($donnees);

   		}

        return $listPosts;

	}


	/**
	 * @access public
	 */

	public function getPost($id) 

	{

		$q = $this->db->prepare('SELECT id, title, content, DATE_FORMAT(creation_date, \'%d/%m/%Y à %Hh%imin%ss\') AS creationDate FROM posts WHERE id = ?');

        $q->execute(array($id));

        $post = $q->fetch(PDO::FETCH_ASSOC);

        $postObject = new Post($post);

        return $postObject;

	}


	/**
	 * @access public
	 */

	public function modifyPost(Post $post) 

	{

		$updatedPost = $this->db->prepare('UPDATE posts SET title = :title, content = :content, state = :state, creation_date = NOW() WHERE id = :id');

        $updatedPost->bindValue(':title', $post->getTitle(), PDO::PARAM_STR);
		$updatedPost->bindValue(':content', $post->getContent(), PDO::PARAM_STR);
		$updatedPost->bindValue(':state', $post->getState(), PDO::PARAM_INT);
		$updatedPost->bindValue(':id', $post->getId(), PDO::PARAM_INT);
		
		return $updatedPost->execute();
		

	}


	/**
	 * @access public
	 */

	public function addPost(Post $post) 

	{

		$addPost = $this->db->prepare('INSERT INTO posts(title, content, state, creation_date) VALUES(:title, :content, :state, NOW())');

        $addPost->bindValue(':title', $post->getTitle(), PDO::PARAM_STR);
		$addPost->bindValue(':content', $post->getContent(), PDO::PARAM_STR);
		$addPost->bindValue(':state', $post->getState(), PDO::PARAM_INT);
	
		return $addPost->execute();
		
	
	}


	
}
?>